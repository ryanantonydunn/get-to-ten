{"version":3,"sources":["helpers/isGameOver.js","helpers/newBoard.js","helpers/getStoredData.js","app/duck/reducers.js","reducers.js","app/App.js","app/duck/actions.js","app/duck/operations/touchBoard.js","app/duck/operations/changeSize.js","app/duck/operations/startNewGame.js","app/duck/operations/index.js","app/AppContainer.js","serviceWorker.js","index.js"],"names":["isGameOver","board","gameOver","forEach","col","x","cell","y","value","match","gameOverCellMatch","Random","require","newBoard","size","max","push","yOffset","integer","helpers_newBoard","i","getStoredData","storedBoard","localStorage","getItem","JSON","parse","map","topScore","score","data","INITIAL_STATE","Object","objectSpread","won","active","reducers","state","arguments","length","undefined","action","type","toConsumableArray","rootReducer","combineReducers","main","mainReducer","interval","Wrapper","styled","div","_templateObject","Bg","_templateObject2","props","opacity","offset","Title","_templateObject3","Description","_templateObject4","Scores","_templateObject5","Buttons","_templateObject6","cols","Board","_templateObject7","BoardInner","_templateObject8","fontSize","Col","_templateObject9","left","Cell","_templateObject10","fadeIn","keyframes","_templateObject11","Options","_templateObject12","delay","Arrow","_templateObject13","BigButton","_templateObject14","TopMessage","_templateObject15","App","sizeBigger","_this$props","_this","changeSize","sizeSmaller","_this$props2","_this2","this","clearInterval","setInterval","_this2$props","setBoard","Math","_this$props3","carryOn","touchBoard","startGame","startNewGame","openSettings","react_default","a","createElement","key","style","bottom","onClick","min","className","lib_default","onSwipeLeft","onSwipeRight","Component","createActions","newGame","touchAction","setSize","Creators","Types","dispatch","checkedCells","defineProperty","removeCells","success","scoreAdd","checkAdjacentCells","newCellsInThisDepth","cellMatch","stringify","areWeHittingTen","didWeHitTenAlready","x1","newCol","newCells","y1","splice","unshift","newScore","parseInt","newTopScore","setItem","saveBoard","operations","connect","mainOperations","Boolean","window","location","hostname","middleware","applyMiddleware","thunk","store","createStore","ReactDOM","render","es","AppContainer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57c5b3da.chunk.js","sourcesContent":["export default board => {\n  if (!board) {\n    return true;\n  }\n  let gameOver = true;\n  const gameOverCellMatch = (x, y, value) => {\n    const match = (x, y) => {\n      if (board[x] && board[x][y] && board[x][y].value === value) {\n        gameOver = false;\n      }\n    };\n    match(x + 1, y);\n    match(x - 1, y);\n    match(x, y + 1);\n    match(x, y - 1);\n  };\n  board.forEach((col, x) => {\n    col.forEach((cell, y) => {\n      gameOverCellMatch(x, y, cell.value);\n    });\n  });\n  return gameOver;\n};\n","import isGameOver from \"./isGameOver\";\nconst Random = require(\"random-js\")();\n\nconst newBoard = size => {\n  const max = size < 4 ? 2 : size > 5 ? 4 : 3;\n  const board = [];\n  for (let x = 0; x < size; x++) {\n    board[x] = [];\n    for (let y = 0; y < size; y++) {\n      board[x].push({\n        yOffset: size - y - 1,\n        value: Random.integer(1, max)\n      });\n    }\n  }\n  return board;\n};\n\nexport default size => {\n  let board,\n    i = 0;\n  while (isGameOver(board) && i < 100) {\n    i++;\n    board = newBoard(size);\n  }\n  return board;\n};\n","import newBoard from \"./newBoard\";\n\nexport default size => {\n  let storedBoard = localStorage.getItem(\"board-\" + size);\n  let board;\n  if (storedBoard) {\n    storedBoard = JSON.parse(storedBoard);\n    board = storedBoard.map(col => {\n      return col.map((value, y) => {\n        return { yOffset: size - y - 1, value };\n      });\n    });\n  } else {\n    board = newBoard(size);\n  }\n  return {\n    topScore: localStorage.getItem(\"topScore-\" + size) || 0,\n    score: localStorage.getItem(\"score-\" + size) || 0,\n    board\n  };\n};\n","import { getStoredData } from \"../../helpers\";\n\nconst size = localStorage.getItem(\"size\") || 4;\nconst data = getStoredData(size);\n\nconst INITIAL_STATE = {\n  size,\n  won: false,\n  active: false,\n  ...data\n};\n\nconst reducers = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"START_GAME\": {\n      return {\n        ...state,\n        active: true\n      };\n    }\n    case \"NEW_GAME\": {\n      return {\n        ...state,\n        board: action.board,\n        score: 0,\n        active: true\n      };\n    }\n    case \"CARRY_ON\": {\n      return {\n        ...state,\n        won: false\n      };\n    }\n    case \"OPEN_SETTINGS\": {\n      return {\n        ...state,\n        active: false\n      };\n    }\n    case \"SET_BOARD\": {\n      return {\n        ...state,\n        board: [...action.board]\n      };\n    }\n    case \"TOUCH_ACTION\": {\n      return {\n        ...state,\n        board: [...action.board],\n        score: action.score,\n        topScore: action.topScore,\n        won: action.won\n      };\n    }\n    case \"SET_SIZE\": {\n      return {\n        ...state,\n        active: false,\n        board: [...action.board],\n        score: action.score,\n        topScore: action.topScore,\n        size: action.size\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n","import { combineReducers } from \"redux\";\nimport { default as mainReducer } from \"./app/duck/reducers\";\n\nconst rootReducer = combineReducers({\n  main: mainReducer\n});\n\nexport default rootReducer;\n","import React, { Component } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Swipe from \"react-easy-swipe\";\n\nconst Wrapper = styled.div`\n  --block: 4px;\n  position: relative;\n  max-width: 450px;\n  padding: 0 10px;\n  margin: 0 auto;\n  text-transform: uppercase;\n`;\n\nconst Bg = styled.div`\n  --col: ${props => props.col};\n  position: absolute;\n  opacity: ${props => props.opacity || 1};\n  z-index: -1;\n  top: ${props => props.offset || 0};\n  left: ${props => props.offset || 0};\n  right: ${props => props.offset || 0};\n  bottom: ${props => props.offset || 0};\n  background-image: linear-gradient(var(--col), var(--col)),\n    linear-gradient(var(--col), var(--col));\n  background-repeat: no-repeat;\n  background-size: calc(100% - var(--block) * 2) 100%,\n    100% calc(100% - var(--block) * 2);\n  background-position: var(--block) 0, 0 var(--block);\n`;\n\nconst Title = styled.div`\n  font-size: 14px;\n  padding: 20px 0 10px;\n  color: #fff;\n  text-shadow: 0 3px 0 #000;\n`;\n\nconst Description = styled.div`\n  font-family: Arial, sans-serif;\n  font-size: 15px;\n  padding: 0 0 11px;\n  line-height: 1.2;\n  text-transform: none;\n  color: #999;\n`;\n\nconst Scores = styled.div`\n  display: flex;\n  margin: 0 -4px 8px;\n  & > div {\n    position: relative;\n    width: 50%;\n    padding: 8px;\n    margin: 0 4px;\n  }\n  span {\n    display: block;\n    padding-bottom: 10px;\n    font-size: 10px;\n    color: #777;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 16px;\n  & > div {\n    position: relative;\n    padding: 16px 16px 13px 16px;\n    margin: 0 4px;\n    font-size: 12px;\n    cursor: pointer;\n    width: 130px;\n  }\n`;\n\nconst cols = [\n  \"#44ee00\",\n  \"#ffff00\",\n  \"#ff4444\",\n  \"#00ffff\",\n  \"#ff00ff\",\n  \"#6666ff\",\n  \"#ff9900\",\n  \"#00ffaa\",\n  \"#9900ff\",\n  \"#ccddcc\",\n  \"#666666\",\n  \"#999999\",\n  \"#BBBBBB\",\n  \"#EEEEEE\"\n];\n\nconst Board = styled.div`\n  position: relative;\n  width: 85%;\n  margin: 0 auto 8px;\n  height: 0;\n  padding-top: 85%;\n  overflow: hidden;\n`;\n\nconst BoardInner = styled.div`\n  --size: ${props => props.size}\n  position: absolute;\n  top: 12px;\n  left: 12px;\n  right: 12px;\n  bottom: 12px;\n  font-size: ${props => props.fontSize};\n`;\n\nconst Col = styled.div`\n  position: absolute;\n  width: var(--size);\n  left: ${props => props.left};\n  top: 0;\n  bottom: 0;\n`;\n\nconst Cell = styled.div`\n  position: absolute;\n  cursor: pointer;\n  display: grid;\n  place-content: center;\n  height: var(--size);\n  left: 0;\n  right: 0;\n  font-size: 1em;\n  @media (max-width: 340px) {\n    font-size: 0.7em;\n  }\n  color: #000;\n`;\n\n// eslint-disable-next-line\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Options = styled.div`\n  position: absolute;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: grid;\n  place-content: center;\n  font-size: 18px;\n  & > span {\n    color: #888;\n    font-size: 12px;\n  }\n  &.fade {\n    opacity: 0;\n    animation: ${fadeIn} 0.7s ease-in ${props => props.delay || \"1s\"} forwards;\n  }\n`;\n\nconst Arrow = styled.div`\n  width: 60px;\n  height: 60px;\n  position: absolute;\n  top: calc(50% - 30px);\n  cursor: pointer;\n  &:before,\n  &:after {\n    content: \"\";\n    position: absolute;\n    left: 15px;\n    top: 15px;\n    width: 30px;\n    height: 8px;\n    background: #ddd;\n  }\n  &:after {\n    width: 8px;\n    height: 30px;\n  }\n  &.left {\n    left: 0;\n    transform: rotate(-45deg);\n  }\n  &.right {\n    right: 0;\n    transform: rotate(135deg);\n  }\n`;\n\nconst BigButton = styled.div`\n  position: relative;\n  z-index: 20;\n  padding: 24px 38px 20px;\n  margin-top: 20px;\n  color: #000;\n  cursor: pointer;\n  .small {\n    font-size: 14px;\n    line-height: 26px;\n  }\n  .large {\n    font-size: 20px;\n    line-height: 26px;\n  }\n`;\n\nconst TopMessage = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 40px;\n  left: 0;\n  font-size: 20px;\n`;\n\nlet interval;\n\nclass App extends Component {\n  //\n  // animate the dropping tiles\n  componentDidMount() {\n    clearInterval(interval);\n    interval = setInterval(() => {\n      const { setBoard, size, board } = this.props;\n      const newBoard = board.map(col => {\n        return col.map((cell, y) => {\n          return {\n            ...cell,\n            yOffset: Math.max(size - y - 1, cell.yOffset - 0.2)\n          };\n        });\n      });\n      setBoard(newBoard);\n    }, 1000 / 30);\n  }\n\n  sizeBigger = () => {\n    const { size, changeSize } = this.props;\n    changeSize(size <= 3 ? 6 : size - 1);\n  };\n\n  sizeSmaller = () => {\n    const { size, changeSize } = this.props;\n    changeSize(size >= 6 ? 3 : size + 1);\n  };\n\n  render() {\n    const {\n      size,\n      board,\n      score,\n      topScore,\n      active,\n      won,\n      carryOn,\n      gameOver,\n      touchBoard,\n      startGame,\n      startNewGame,\n      openSettings\n    } = this.props;\n    return (\n      <Wrapper>\n        <Title>Get to ten</Title>\n        <Description>\n          Tap adjecent tiles with the same number to get a bigger number\n        </Description>\n        <Board>\n          <Bg col=\"#000\" />\n          <BoardInner\n            size={100 / size + \"%\"}\n            fontSize={size < 4 ? \"22px\" : size < 6 ? \"18px\" : \"14px\"}\n          >\n            {board.map((col, x) => (\n              <Col\n                key={\"col\" + x}\n                left={\"calc(((100% / \" + size + \")) * \" + x + \")\"}\n              >\n                {col.map((cell, y) => (\n                  <Cell\n                    key={x + \"-\" + y}\n                    style={{\n                      bottom:\n                        \"calc(((100% / \" + size + \")) * \" + cell.yOffset + \")\"\n                    }}\n                    onClick={() => {\n                      if (active && !gameOver) {\n                        touchBoard(x, y, board, size, score, topScore);\n                      }\n                    }}\n                  >\n                    <Bg\n                      offset={\n                        size > 5 ? \"calc(var(--block) / 2)\" : \"var(--block)\"\n                      }\n                      col={cols[Math.min(cell.value, cols.length - 1)]}\n                    />\n                    {cell.value}\n                  </Cell>\n                ))}\n              </Col>\n            ))}\n          </BoardInner>\n          {won ? (\n            <Options className=\"fade\" delay=\"0s\">\n              <Bg col=\"#000\" opacity=\"0.8\" />\n              <div>\n                You Win!\n                <BigButton onClick={carryOn}>\n                  <Bg col=\"#eee\" />\n                  Carry On\n                </BigButton>\n              </div>\n            </Options>\n          ) : null}\n          {(!active || gameOver) && !won ? (\n            <Swipe\n              onSwipeLeft={this.sizeSmaller}\n              onSwipeRight={this.sizeBigger}\n            >\n              <Options className={gameOver && active ? \"fade\" : \"\"}>\n                <Bg col=\"#000\" opacity=\"0.8\" />\n                <Arrow className=\"left\" onClick={this.sizeBigger} />\n                <Arrow className=\"right\" onClick={this.sizeSmaller} />\n                <div>\n                  {gameOver ? <TopMessage>Game Over</TopMessage> : null}\n                  {size} <span>x</span> {size}\n                  <BigButton\n                    onClick={() => {\n                      if (gameOver) {\n                        startNewGame(size);\n                      } else {\n                        startGame();\n                      }\n                    }}\n                  >\n                    <Bg col=\"#eee\" />\n                    {gameOver ? (\n                      <span className=\"small\">Try Again</span>\n                    ) : (\n                      <span className=\"large\">Play</span>\n                    )}\n                  </BigButton>\n                </div>\n              </Options>\n            </Swipe>\n          ) : null}\n        </Board>\n        <Scores>\n          <div>\n            <Bg col=\"#262626\" />\n            <span>Best</span>\n            {topScore}\n          </div>\n          <div>\n            <Bg col=\"#262626\" />\n            <span>Score</span>\n            {score}\n          </div>\n        </Scores>\n        <Buttons>\n          <div onClick={openSettings}>\n            <Bg col=\"#444\" />\n            Options\n          </div>\n          <div\n            onClick={() => {\n              startNewGame(size);\n            }}\n          >\n            <Bg col=\"#444\" />\n            New Game\n          </div>\n        </Buttons>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import { createActions } from \"reduxsauce\";\n\nconst { Creators, Types } = createActions({\n  startGame: [],\n  carryOn: [],\n  newGame: [\"board\"],\n  openSettings: [],\n  setBoard: [\"board\"],\n  touchAction: [\"board\", \"score\", \"topScore\", \"won\"],\n  setSize: [\"board\", \"score\", \"topScore\", \"size\"]\n});\n\nexport { Creators, Types };\n","import { Creators } from \"../actions\";\nimport { isGameOver } from \"../../../helpers\";\nconst Random = require(\"random-js\")();\n\nconst { touchAction } = Creators;\n\n// player has touched the board\nconst touchBoard = (x, y, board, size, score, topScore) => {\n  return dispatch => {\n    const max = size < 4 ? 2 : size > 5 ? 4 : 3;\n    const value = board[x][y].value;\n    const checkedCells = { [x + \"-\" + y]: true };\n    const removeCells = {};\n    let success = false;\n    let scoreAdd = 2;\n\n    // check the adjacent cells to a cell\n    const checkAdjacentCells = (x, y) => {\n      const newCellsInThisDepth = [];\n      const cellMatch = (x, y) => {\n        const key = x + \"-\" + y;\n        if (checkedCells[key]) {\n          return;\n        }\n        checkedCells[key] = true;\n        if (board[x] && board[x][y] && board[x][y].value === value) {\n          newCellsInThisDepth.push({ x, y });\n          removeCells[key] = true;\n          success = true;\n          scoreAdd++;\n        }\n      };\n      cellMatch(x + 1, y);\n      cellMatch(x - 1, y);\n      cellMatch(x, y + 1);\n      cellMatch(x, y - 1);\n\n      // recurse the function until there are no more matches\n      newCellsInThisDepth.forEach(cell => {\n        checkAdjacentCells(cell.x, cell.y);\n      });\n    };\n    checkAdjacentCells(x, y);\n\n    // are we not doing any work\n    if (!success) {\n      return;\n    }\n\n    // prep the new board with offsets on new cells\n    const newBoard = JSON.parse(JSON.stringify(board));\n    newBoard[x][y].value += 1;\n    const areWeHittingTen = newBoard[x][y].value === 10;\n    let didWeHitTenAlready = false;\n    newBoard.forEach((col, x1) => {\n      const newCol = [...col];\n      let newCells = 0;\n      for (let y1 = col.length - 1; y1 >= 0; y1--) {\n        const notTheSameCell = !(x1 === x && y1 === y);\n        if (notTheSameCell && newBoard[x1][y1].value >= 10) {\n          didWeHitTenAlready = true;\n        }\n        if (removeCells[x1 + \"-\" + y1]) {\n          newCol.splice(y1, 1);\n          newCells++;\n        }\n      }\n      for (let i = 0; i < newCells; i++) {\n        let yOffset = newCol[0] ? newCol[0].yOffset + 1 : 0;\n        yOffset = Math.max(yOffset, size);\n        newCol.unshift({ value: Random.integer(1, max), yOffset });\n      }\n      newBoard[x1] = newCol;\n    });\n\n    // are we game overed\n    let gameOver = isGameOver(newBoard);\n\n    // did we just win\n    const won = areWeHittingTen && !didWeHitTenAlready;\n\n    // set score\n    const newScore = parseInt(score) + scoreAdd * newBoard[x][y].value;\n    const newTopScore = Math.max(newScore, topScore);\n    localStorage.setItem(\"score-\" + size, gameOver ? 0 : newScore);\n    localStorage.setItem(\"topScore-\" + size, newTopScore);\n\n    // save board\n    const saveBoard = newBoard.map(col => {\n      return col.map(cell => cell.value);\n    });\n    localStorage.setItem(\"board-\" + size, JSON.stringify(saveBoard));\n\n    // dispatch the new board\n    dispatch(touchAction(newBoard, newScore, newTopScore, won));\n  };\n};\n\nexport default touchBoard;\n","import { Creators } from \"../actions\";\nimport { getStoredData } from \"../../../helpers\";\nconst { setSize } = Creators;\n\nexport default size => {\n  return dispatch => {\n    const data = getStoredData(size);\n    dispatch(setSize(data.board, data.score, data.topScore, size));\n  };\n};\n","import { Creators } from \"../actions\";\nimport { newBoard } from \"../../../helpers\";\nconst { newGame } = Creators;\n\nexport default size => {\n  return dispatch => {\n    const board = newBoard(size);\n    const saveBoard = board.map(col => {\n      return col.map(cell => cell.value);\n    });\n    localStorage.setItem(\"board-\" + size, JSON.stringify(saveBoard));\n    localStorage.setItem(\"score-\" + size, 0);\n    dispatch(newGame(board));\n  };\n};\n","import { Creators } from \"../actions\";\nimport touchBoard from \"./touchBoard\";\nimport changeSize from \"./changeSize\";\nimport startNewGame from \"./startNewGame\";\n\nconst { setBoard, startGame, openSettings, carryOn } = Creators;\n\nexport default {\n  setBoard,\n  touchBoard,\n  changeSize,\n  startNewGame,\n  startGame,\n  openSettings,\n  carryOn\n};\n","import { connect } from \"react-redux\";\nimport App from \"./App\";\nimport { mainOperations } from \"./duck\";\nimport { isGameOver } from \"../helpers\";\n\nconst mapStateToProps = state => {\n  const gameOver = isGameOver(state.main.board);\n  return { ...state.main, gameOver };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    carryOn: () => {\n      dispatch(mainOperations.carryOn());\n    },\n    setBoard: board => {\n      dispatch(mainOperations.setBoard(board));\n    },\n    touchBoard: (x, y, board, size, score, topScore) => {\n      dispatch(mainOperations.touchBoard(x, y, board, size, score, topScore));\n    },\n    changeSize: size => {\n      dispatch(mainOperations.changeSize(size));\n    },\n    startGame: () => {\n      dispatch(mainOperations.startGame());\n    },\n    startNewGame: size => {\n      dispatch(mainOperations.startNewGame(size));\n    },\n    openSettings: () => {\n      dispatch(mainOperations.openSettings());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nimport { default as App } from \"./app/AppContainer\";\nimport \"./style.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst middleware = applyMiddleware(thunk);\nconst store = createStore(rootReducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}